-- PROC_GET_CARDS_BY_ACCOUNT
USE smartov
GO

-- DELETE IF PROD ALREADY EXISTS
IF OBJECT_ID('PROC_GET_CARDS_BY_ACCOUNT', 'P') IS NOT NULL
  DROP PROCEDURE PROC_GET_CARDS_BY_ACCOUNT
GO

-- ERROR MESSAGES
EXECUTE sp_addmessage 56050, 16, 'Account bestaat niet', @replace = REPLACE;
GO
-- CREATE STORED PROCEDURE
CREATE PROCEDURE PROC_GET_CARDS_BY_ACCOUNT
    @AccountID UNIQUEIDENTIFIER,
    @Detailed  BIT = 0
AS
  DECLARE @TranCounter INT;
  SET @TranCounter = @@TRANCOUNT;
  IF @TranCounter > 0
    SAVE TRANSACTION ProcedureSave;
  ELSE
    BEGIN TRANSACTION;
  BEGIN TRY

  IF NOT EXISTS(SELECT 1
                FROM dbo.ACCOUNT
                WHERE @AccountID = ACCOUNTID)
    RAISERROR (56050, 16, 1);

  IF @Detailed = 1
    SELECT dbo.KAART.KAARTID, ACCOUNTID, KAARTNUMMER, KAARTNAAM, VERVALDATUM, KOPPELDATUM, PERSOONID
    FROM dbo.KAART
      LEFT JOIN dbo.PERSOONLIJKE_KAART ON dbo.KAART.KAARTID = dbo.PERSOONLIJKE_KAART.KAARTID
    WHERE @AccountID = ACCOUNTID;
  ELSE
    SELECT KAARTID
    FROM dbo.KAART
    WHERE @AccountID = ACCOUNTID;

  IF @TranCounter = 0
    COMMIT TRANSACTION;

  END TRY
  BEGIN CATCH
    IF @TranCounter = 0
      ROLLBACK TRANSACTION;
    ELSE
      IF XACT_STATE() <> -1
        ROLLBACK TRANSACTION ProcedureSave;

    DECLARE @ErrorMessage NVARCHAR(4000);
    DECLARE @ErrorSeverity INT;
    DECLARE @ErrorState INT;
    SELECT @ErrorMessage = ERROR_MESSAGE();
    SELECT @ErrorSeverity = ERROR_SEVERITY();
    SELECT @ErrorState = ERROR_STATE();
    RAISERROR (@ErrorMessage, @ErrorSeverity, @ErrorState);
  END CATCH